version: 2

references:
    configure_environment: &configure_environment
        docker:
            - image: remg/en-marche.fr:latest
              auth:
                  username: $DOCKER_USER
                  password: $DOCKER_PASSWORD
            - image: redis:3.2
            - image: mysql:5.7.14
              environment:
                  MYSQL_ROOT_PASSWORD: root
            - image: selenium/standalone-firefox-debug:2.53.1
              shm_size: 2g
            - image: rabbitmq:3-management

        working_directory: ~/app
        environment:
            APP_ENV: test
            DATABASE_HOST: 127.0.0.1
            REDIS_HOST: 'redis://127.0.0.1'
            RABBITMQ_HOST: 127.0.0.1
            SELENIUM_HOST: 127.0.0.1

    working_directory: &working_directory
        working_directory: ~/app

    attach_workspace: &attach_workspace
        attach_workspace:
            at: ~/app

    prepare_database: &prepare_database
        run: |
            php -r "set_time_limit(60);for(;;){if(@fsockopen('127.0.0.1',3306)){break;}echo \"Waiting for MySQL\n\";sleep(1);}"

            bin/console doctrine:database:drop --env=test --force --if-exists
            bin/console doctrine:database:create --env=test
            bin/console doctrine:database:import -n --env=test -- dump/dump-2018.sql
            bin/console doctrine:migration:migrate -n --env=test
            bin/console doctrine:schema:validate --env=test
            bin/console doctrine:fixtures:load -n --env=test

    prepare_rabbitmq: &prepare_rabbitmq
        run: |
            php -r "set_time_limit(60);for(;;){if(@fsockopen('127.0.0.1',5672)){break;}echo \"Waiting for RabbitMQ\n\";sleep(1);}"

            bin/console --env=test rabbitmq:setup-fabric

jobs:
    build:
        <<: *working_directory
        <<: *configure_environment
        steps:
            - checkout

            # Generate keys
            - run: |
                  openssl genrsa -out var/private.key 1024
                  openssl rsa -in var/private.key -pubout -out var/public.key
                  chmod -R 777 var app/data/images app/data/files
                  chmod 660 var/public.key var/private.key

            # Composer
            - restore_cache:
                  keys:
                      - v1-deps-{{ checksum "composer.lock" }}
            - run: composer install --dev --no-interaction
            - save_cache:
                  paths: [./vendor]
                  key: v1-deps-{{ checksum "composer.lock" }}

            # Prepare PHPUnit bridge
            - restore_cache:
                  keys:
                      - v1-phpunit-{{ checksum "composer.lock" }}
            - run: vendor/bin/phpunit --check-version
            - save_cache:
                  paths: [./vendor/bin/.phpunit]
                  key: v1-phpunit-{{ checksum "composer.lock" }}

            # Yarn
            - restore_cache:
                  key: yarn-packages-{{ checksum "yarn.lock" }}
            - run: |
                  yarn install
                  yarn build-dev
                  yarn build-prod
                  yarn build-amp
            - save_cache:
                  key: yarn-packages-{{ checksum "yarn.lock" }}
                  paths: [./node_modules]

            # Save workspace
            - persist_to_workspace:
                  root: ./
                  paths: [./]

    php-cs:
        <<: *working_directory
        <<: *configure_environment
        steps:
            - *attach_workspace

            - run: php -d memory_limit=1024M vendor/bin/php-cs-fixer fix --dry-run --diff

    security-check:
        <<: *working_directory
        <<: *configure_environment
        steps:
            - *attach_workspace

            - run: vendor/bin/security-checker security:check

    phpunit:
        <<: *working_directory
        <<: *configure_environment
        steps:
            - *attach_workspace
            - *prepare_database
            - *prepare_rabbitmq

            - run: vendor/bin/phpunit -vvv --log-junit ./phpunit/junit.xml

            - store_test_results:
                  path: ./phpunit

    behat:
        <<: *working_directory
        <<: *configure_environment
        parallelism: 4
        steps:
            - *attach_workspace
            - *prepare_database
            - *prepare_rabbitmq

            - run: |
                  set -x

                  case $CIRCLE_NODE_INDEX in
                      0)
                          vendor/bin/behat --tags='@api' -vvv --colors -f progress -o std -f junit -o ./behat --
                          ;;
                      1)
                          vendor/bin/behat --tags='@donation,@oauth' -vvv --colors -f progress -o std -f junit -o ./behat --
                          ;;
                      2)
                          vendor/bin/behat --tags='@admin,@registration' -vvv --colors -f progress -o std -f junit -o ./behat --
                          ;;
                      3)
                          vendor/bin/behat --tags='~@api&&~@donation&&~@oauth&&~@admin&&~@registration' -vvv --colors -f progress -o std -f junit -o ./behat --
                          ;;
                  esac

            - store_test_results:
                path: ./behat

workflows:
    version: 2
    test:
        jobs:
            - build

            - php-cs:
                  requires:
                      - build

            - security-check:
                  requires:
                      - build

            - phpunit:
                  requires:
                      - build

            - behat:
                  requires:
                      - build
